---
source: src/parsers/template_parser.rs
assertion_line: 123
expression: template_entity
---
Ok(
    TemplateEntity {
        entity_content: [
            Static {
                content: "\nuse serde::Serialize;\nuse serde::Deserialize;\nuse uuid::Uuid;\nuse crate::error::Error;\nuse crate::models::PaginatedResult;\nuse serde::Serializer;\nuse crate::controllers::entity_name_controller::{AddEntityNamePayload, UpdateEntityNamePayload};\n\n\n#[derive(Debug, Clone, Serialize, Deserialize)]\n#[serde(rename_all = \"camelCase\")]\npub struct EntityName {",
                start: 18,
                end: 370,
            },
            Attribute {
                content: "\n    pub attribute_name: AttributeType,\n    pub attribute2_name: Attribute2Type,",
                start: 370,
                end: 511,
            },
            Static {
                content: "\n}\n\nimpl EntityName {\n    pub fn new(payload: AddEntityNamePayload) -> Result<Self, Error> {\n        Ok(Self {\n            primary_key: payload.primary_key,",
                start: 511,
                end: 667,
            },
            Attribute {
                content: "\n            attribute_name: payload.attribute_name,\n            attribute2_name: payload.attribute2_name,",
                start: 667,
                end: 845,
            },
            Static {
                content: "\n        })\n    }\n\n    pub fn update(payload: UpdateEntityNamePayload) -> Result<Self, Error> {\n        Ok(Self {\n            primary_key: payload.primary_key,",
                start: 845,
                end: 1004,
            },
            Attribute {
                content: "\n            attribute_name: payload.attribute_name,\n            attribute2_name: payload.attribute2_name,",
                start: 1004,
                end: 1182,
            },
            Static {
                content: "\n        })\n    }\n}\n\n#[derive(Debug, Clone, Serialize, Deserialize)]\n#[serde(rename_all = \"camelCase\")]\npub struct EntityNameFilterAttributes {",
                start: 1182,
                end: 1325,
            },
            Filter {
                content: [
                    FilterAttribute {
                        content: "\n    filter_attribute_name: Option<FilterAttributeType>,\n    filter2_attribute_name: Option<Filter2AttributeType>,",
                        start: 1349,
                        end: 1533,
                    },
                ],
            },
            Static {
                content: "\n}\n\nimpl EntityNameFilterAttributes {",
                start: 1560,
                end: 1597,
            },
            Filter {
                content: [
                    Static {
                        content: "\n    fn is_most_specific_filter_attribute_name_filter(&self) -> bool {",
                        start: 1620,
                        end: 1690,
                    },
                    FilterAttribute {
                        content: "\n        self.filter_attribute_name.is_some() && self.filter2_attribute_name.is_some()",
                        start: 1690,
                        end: 1854,
                    },
                    Static {
                        content: "\n    }",
                        start: 1854,
                        end: 1860,
                    },
                ],
            },
            Static {
                content: "\n\n}",
                start: 1887,
                end: 1890,
            },
        ],
    },
)
